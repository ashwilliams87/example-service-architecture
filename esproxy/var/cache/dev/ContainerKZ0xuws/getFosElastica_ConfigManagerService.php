<?php

namespace ContainerKZ0xuws;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFosElastica_ConfigManagerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'fos_elastica.config_manager' shared service.
     *
     * @return \FOS\ElasticaBundle\Configuration\ConfigManager
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/elastica-bundle/src/Configuration/ManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/elastica-bundle/src/Configuration/ConfigManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/elastica-bundle/src/Configuration/Source/SourceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofsymfony/elastica-bundle/src/Configuration/Source/ContainerSource.php';

        $a = ($container->services['FOS\\ElasticaBundle\\Elastica\\Index $books3Index'] ?? $container->load('getIndexbooks3IndexService'));

        if (isset($container->privates['fos_elastica.config_manager'])) {
            return $container->privates['fos_elastica.config_manager'];
        }

        return $container->privates['fos_elastica.config_manager'] = new \FOS\ElasticaBundle\Configuration\ConfigManager([new \FOS\ElasticaBundle\Configuration\Source\ContainerSource(['books_3' => ['elasticsearch_name' => 'books_3', 'reference' => $a, 'model' => NULL, 'name' => 'books_3', 'settings' => [], 'index_prototype' => [], 'use_alias' => false, 'mapping' => ['dynamic_templates' => [], 'properties' => ['book_id' => ['type' => 'integer'], 'book_name' => ['type' => 'text', 'analyzer' => 'standard']]], 'config' => ['analyzer' => NULL, 'search_analyzer' => NULL, 'dynamic' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => [], 'numeric_detection' => NULL]]])]);
    }
}
