<?php

namespace ContainerC1xCQav;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getBookSearchControllerService extends App_KernelTestDebugContainer
{
    /**
     * Gets the public 'App\Controller\BookSearchController' shared autowired service.
     *
     * @return \App\Controller\BookSearchController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Controller/BookSearchController.php';
        include_once \dirname(__DIR__, 4).'/src/Contract/Service/BookSearchServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Service/BookSearchService.php';
        include_once \dirname(__DIR__, 4).'/src/Contract/Repository/BookSearchRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Repository/BookSearchRepository.php';

        $a = ($container->services['App\\Service\\SecurityService'] ?? $container->load('getSecurityServiceService'));

        $container->services['App\\Controller\\BookSearchController'] = $instance = new \App\Controller\BookSearchController(new \App\Service\BookSearchService(new \App\Repository\BookSearchRepository(($container->privates['fos_elastica.client.default'] ?? $container->load('getFosElastica_Client_DefaultService')), $a), ($container->privates['App\\Serializer\\FoundDocumentDenormalizer'] ??= new \App\Serializer\FoundDocumentDenormalizer()), ($container->privates['App\\Serializer\\FoundDocumentContentDenormalizer'] ??= new \App\Serializer\FoundDocumentContentDenormalizer())), $a, ($container->privates['serializer'] ?? self::getSerializerService($container)));

        $instance->setContainer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'serializer' => ['privates', 'serializer', 'getSerializerService', false],
            'twig' => ['privates', 'twig', 'getTwigService', true],
        ], [
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'serializer' => '?',
            'twig' => '?',
        ]))->withContext('App\\Controller\\BookSearchController', $container));

        return $instance;
    }
}
